"TULIP002", "TULIP00", "TULIP001", "TULIP001", "TULIP001", "TULIPT002",
"TULIP001", "TULIP001", "TULIP00", "TULIP001", "TULIP001", "TULIP002",
"TULIP002", "TULIP001", "TULIP002", "TULIP002", "TULIP00", "TULIP002",
"TULIP002", "TULIP002", "TULIP00", "TULIP002", "TULIP001", "TULIP00",
"TULIP00", "TULIP00", "TULIPT002", "TULIPT002", "TULIP002", "TULIP00",
"TULIP00", "TULIP002", "TULIP002", "TULIP002", "TULIPT002", "TULIP002",
"TULIP002", "TULIP001", "TULIP00", "TULIP001", "TULIP001", "TULIP002",
"TULIP001", "TULIP002", "TULIP002", "TULIP002", "TULIP002", "TULIP00",
"TULIP002", "TULIP001", "TULIP001", "TULIP001", "TULIP001", "TULIP002",
"TULIP002", "TULIP001", "TULIP001", "TULIP001", "TULIP001", "TULIP001",
"TULIP002", "TULIP002", "TULIP002", "TULIP002", "TULIP00", "TULIP002",
"TULIPT002", "TULIPT002", "TULIP00", "TULIP002", "TULIP00", "TULIP00",
"TULIP002", "TULIP002", "TULIP002", "TULIP002", "TULIP002", "TULIP002",
"TULIP002", "TULIP002", "TULIPT001", "TULIP001", "TULIP002",
"TULIP00", "TULIP002", "TULIP001", "TULIP002", "TULIP001", "TULIP002",
"TULIP00", "TULIP001", "TULIP002", "TULIP002", "TULIP002", "TULIP001",
"TULIP002", "TULIP00", "TULIP00", "TULIP00", "TULIP00", "TULIP002",
"TULIP00", "TULIP002", "TULIP001", "TULIP002", "TULIP001", "TULIP00",
"TULIP002", "TULIP002", "TULIP001", "TULIP001", "TULIP001", "TULIP00",
"TULIP00", "TULIP00", "TULIP002", "TULIP002", "TULIP00", "TULIP002",
"TULIP002", "TULIP002", "TULIP002", "TULIP002", "TULIP002", "TULIP00",
"TULIP00", "TULIP00", "TULIP00", "TULIP002", "TULIP001", "TULIP001",
"TULIP001", "TULIP001", "TULIP001", "TULIP001", "TULIP002", "TULIP001",
"TULIP001", "TULIP00", "TULIP001", "TULIP001", "TULIP00", "TULIP00",
"TULIP002", "TULIPT001", "TULIP00", "TULIP002", "TULIPT002",
"TULIP002", "TULIP002", "TULIP002", "TULIP002", "TULIP002", "TULIP002",
"TULIP002", "TULIP002", "TULIP002", "TULIP00", "TULIP00-A", "TULIP00",
"TULIP002", "TULIP00", "TULIP002", "TULIP002", "TULIP001", "TULIP001",
"TULIP00", "TULIP00", "TULIP001", "TULIP00", "TULIP002", "TULIP002",
"TULIP002", "TULIP00", "TULIP002", "TULIP00", "TULIP002", "TULIP002",
"TULIP002", "TULIPT002", "TULIP002", "TULIP002", "TULIP002",
"TULIP002", "TULIP001", "TULIP002", "TULIP003", "TULIP001", "TULIP001",
"TULIP002", "TULIP00", "TULIP00", "TULIP001", "TULIP002", "TULIP002",
"TULIP002", "TULIP002", "TULIP002", "TULIP002", "TULIP001", "TULIP002",
"TULIP00", "TULIP00", "TULIP001", "TULIP00", "TULIP00", "TULIPT003",
"TULIP001", "TULIP00", "TULIP002", "TULIP001", "TULIP001", "TULIP002",
"TULIP00", "TULIP002", "TULIP002", "TULIP001", "TULIP001", "TULIP001",
"TULIP001", "TULIP001", "TULIP001", "TULIP001", "TULIP001", "TULIP001",
"TULIP001", "TULIP001", "TULIP00", "TULIP001", "TULIP002", "TULIP002",
"TULIP002", "TULIP002", "TULIP001", "TULIP002", "TULIP002", "TULIP001",
"TULIP001", "TULIP001", "TULIP002", "TULIP002", "TULIP002", "TULIP002",
"TULIP002", "TULIP001", "TULIP001", "TULIP001", "TULIP002", "TULIP002",
"TULIP001", "TULIP002", "TULIP002", "TULIP002", "TULIP002", "TULIP001",
"TULIP001", "TULIP002", "TULIP002", "TULIP002", "TULIP001", "TULIP002",
"TULIP002", "TULIPT002", "TULIP002", "TULIP002", "TULIP002",
"TULIP001", "TULIP002", "TULIP002", "TULIP001", "TULIP001", "TULIPT003",
"TULIP002", "TULIP002", "TULIP002", "TULIP002", "TULIPT003",
"TULIP002", "TULIP002", "TULIP002", "TULIP003", "TULIP002", "TULIP002",
"TULIP002", "TULIP002", "TULIP002", "TULIP002", "TULIPT003",
"TULIPT003", "TULIP002", "TULIPT003", "TULIPT003", "TULIP002",
"TULIP002", "TULIP002", "TULIP002", "TULIP002", "TULIP002", "TULIP003",
"TULIP003", "TULIP003", "TULIP003", "TULIPT003", "TULIP003",
"TULIP002", "TULIP002", "TULIP002", "TULIP002", "TULIP002", "TULIP003",
"TULIP002", "TULIP002", "TULIPT003", "TULIP002", "TULIP002",
"TULIP002", "TULIP002", "TULIP002", "TULIP002", "TULIP002", "TULIP002",
"TULIP002", "TULIP00", "TULIP002", "TULIP002", "TULIP002", "TULIP002",
"TULIP002", "TULIP002", "TULIP002", "TULIP002", "TULIP002", "TULIP002",
"TULIP002", "TULIP002", "TULIP002", "TULIP002", "TULIP002", "TULIP002",
"TULIPT004", "TULIPT003", "TULIP003", "TULIPT003", "TULIPT003",
"TULIPT003", "TULIPT003", "TULIP003", "TULIPT003", "TULIP003",
"TULIPT003", "TULIPT003", "TULIPT003", "TULIP003", "TULIP003",
"TULIP003", "TULIPT003", "TULIPT003", "TULIP003", "TULIPT004",
"PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0",
"PLIS0", "PLIS0", "TULIP003", "PLIS0", "PLIS0", "PLIS0", "PLIS0",
"PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0",
"PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "TULIP003",
"PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0",
"PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0",
"TULIP003", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0",
"PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0",
"PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0",
"PLIS0", "TULIP004", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "TULIP003",
"PLIS0", "PLIS0", "PLIS0", "TULIPT004", "PLIS0", "TULIPT004",
"PLIS0", "PLIS0", "PLIS0", "PLIS0", "TULIP003", "PLIS0", "PLIS0",
"PLIS0", "TULIP003", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0",
"PLIS0", "PLIS0", "PLIS0", "TULIP003", "TULIPT003", "PLIS0",
"PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0",
"PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0",
"PLIS0", "PLIS17", "PLIS17", "PLIS0", "PLIS0", "PLIS0", "PLIS0",
"TULIPT003", "TULIPT003", "PLIS17", "PLIS0", "PLIS17", "TULIP003",
"PLIS17", "PLIS17", "PLIS0", "PLIS0", "TULIPT003", "PLIS0", "PLIS0",
"PLIS0", "PLIS0", "TULIPT003", "PLIS0", "PLIS0", "TULIP004",
"TULIP003", "TULIP003", "PLIS17", "PLIS17", "PLIS17", "PLIS0",
"PLIS0", "TULIPT003", "TULIPT004", "PLIS0", "PLIS0", "PLIS17",
"TULIP003", "PLIS0", "TULIPT003", "PLIS17", "PLIS17", "PLIS17",
"TULIPT003", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "TULIP003",
"TULIPT004", "PLIS0", "TULIP003", "PLIS0", "TULIP003", "PLIS0",
"TULIP003", "PLIS0", "TULIP003", "PLIS0", "PLIS0", "TULIP003",
"PLIS17", "PLIS17", "TULIPT003", "PLIS17", "TULIPT003", "PLIS17",
"PLIS17", "PLIS0", "TULIP004", "TULIP003", "TULIP003", "TULIP003",
"PLIS0", "PLIS17", "TULIP003", "TULIP003", "TULIP003", "PLIS0",
"PLIS17", "TULIP003", "PLIS0", "PLIS17", "TULIP003", "TULIP003",
"TULIPT003", "PLIS17", "PLIS0", "PLIS0", "TULIP003", "TULIP003",
"PLIS17", "TULIP003", "TULIPT003", "TULIP003", "PLIS0", "TULIP003",
"TULIP003", "TULIP003", "PLIS0", "PLIS0", "TULIP003", "PLIS0",
"TULIP003", "TULIP003", "TULIP003", "PLIS0", "PLIS0", "PLIS0",
"PLIS17", "PLIS17", "TULIPT004", "PLIS17", "PLIS17", "PLIS17",
"PLIS17", "PLIS17", "PLIS0", "PLIS17", "PLIS0", "TULIP003", "PLIS0",
"TULIP003", "PLIS0", "TULIP003", "TULIP004", "PLIS0", "PLIS17",
"TULIP003", "PLIS0", "PLIS0", "TULIP003", "TULIP003", "TULIP003",
"PLIS17", "PLIS0", "PLIS17", "TULIP003", "TULIPT004", "TULIP003",
"TULIP003", "PLIS0", "PLIS0", "PLIS17", "PLIS0", "PLIS0", "PLIS0",
"PLIS17", "PLIS0", "TULIPT003", "PLIS0", "PLIS0", "PLIS17", "PLIS17",
"PLIS17", "PLIS17", "PLIS0", "PLIS17", "PLIS0", "TULIP003", "TULIPT003",
"PLIS0", "PLIS17", "PLIS0", "PLIS0", "TULIP003", "PLIS17", "TULIP003",
"PLIS0", "PLIS0", "TULIP004", "PLIS17", "PLIS0", "PLIS0", "PLIS0",
"TULIP004", "TULIP003", "PLIS0", "PLIS0", "PLIS0", "PLIS17",
"PLIS17", "TULIP003", "PLIS17", "PLIS0", "TULIP003", "TULIP003",
"PLIS0", "PLIS0", "TULIP003", "PLIS17", "PLIS17", "PLIS0", "PLIS17",
"PLIS17", "PLIS0", "PLIS0", "TULIPT003", "PLIS0", "PLIS0", "TULIP003",
"PLIS0", "PLIS17", "PLIS17", "PLIS17", "PLIS0", "PLIS17", "PLIS0",
"PLIS0", "PLIS0", "TULIP003", "PLIS17", "TULIP003", "PLIS0",
"PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS17", "PLIS17", "PLIS0",
"TULIP003", "PLIS17", "PLIS17", "PLIS0", "PLIS17", "PLIS17",
"PLIS17", "TULIP003", "PLIS0", "PLIS17", "PLIS0", "PLIS0", "PLIS0",
"PLIS0", "PLIS0", "TULIPT003", "PLIS0", "PLIS0", "PLIS0", "PLIS0",
"TULIP003", "TULIP003", "PLIS17", "PLIS0", "PLIS0", "PLIS0",
"TULIPT003", "PLIS17", "PLIS17", "PLIS17", "PLIS0", "PLIS17",
"PLIS18", "PLIS0", "PLIS17", "PLIS0", "PLIS0", "PLIS0", "PLIS0",
"PLIS17", "TULIPT003", "PLIS0", "PLIS17", "PLIS0", "PLIS0", "PLIS17",
"TULIPT003", "TULIP004", "PLIS0", "TULIP003", "TULIP003", "PLIS0",
"PLIS17", "PLIS17", "PLIS0", "TULIP003", "PLIS17", "PLIS18",
"PLIS17", "PLIS0", "PLIS0", "PLIS17", "PLIS17", "PLIS0", "PLIS17",
"PLIS17", "PLIS17", "PLIS18", "PLIS17", "PLIS0", "PLIS0", "PLIS0",
"PLIS17", "TULIP003", "PLIS0", "PLIS0", "TULIP003", "TULIP003",
"PLIS17", "PLIS17", "PLIS17", "PLIS0", "PLIS0", "PLIS0", "PLIS0",
"PLIS17", "TULIPT003", "PLIS0", "TULIPT003", "PLIS18", "TULIP003",
"PLIS0", "PLIS17", "PLIS17", "TULIP003", "PLIS0", "PLIS17", "PLIS0",
"PLIS0", "TULIP003", "PLIS17", "PLIS17", "PLIS17", "PLIS17",
"PLIS17", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "TULIP003", "PLIS0",
"TULIP003", "PLIS0", "TULIP003", "PLIS0", "PLIS18", "PLIS17",
"PLIS17", "PLIS18", "PLIS0", "PLIS0", "PLIS18", "TULIP003", "PLIS17",
"PLIS17", "PLIS18", "PLIS18", "PLIS17", "PLIS17", "TULIP003",
"PLIS17", "PLIS17", "TULIP004", "TULIP003", "TULIPT003", "TULIPT003",
"PLIS0", "TULIP003", "PLIS0", "PLIS0", "PLIS18", "PLIS17", "PLIS17",
"PLIS18", "PLIS18", "PLIS18", "PLIS17", "PLIS17", "PLIS0", "PLIS17",
"PLIS0", "PLIS0", "PLIS0", "TULIP003", "PLIS17", "PLIS0", "TULIP003",
"PLIS17", "PLIS0", "PLIS18", "PLIS0", "PLIS17", "PLIS17", "PLIS0",
"PLIS18", "PLIS18", "PLIS17", "TULIP004", "PLIS0", "TULIP004",
"PLIS18", "TULIP003", "PLIS0", "PLIS17", "PLIS0", "PLIS0", "PLIS0",
"PLIS18", "PLIS0", "PLIS0", "PLIS18", "PLIS18", "PLIS17", "PLIS0",
"PLIS0", "PLIS0", "PLIS0", "PLIS17", "PLIS0", "PLIS18", "PLIS17",
"PLIS17", "PLIS18", "PLIS17", "TULIP004", "PLIS0", "PLIS18",
"PLIS17", "PLIS0", "PLIS0", "PLIS0", "PLIS17", "PLIS18", "PLIS0",
"PLIS0", "PLIS17", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0",
"PLIS0", "PLIS0", "PLIS17", "PLIS17", "PLIS0", "PLIS0", "PLIS17",
"PLIS17", "PLIS0", "PLIS17", "PLIS17", "PLIS18", "PLIS18", "PLIS0",
"PLIS0", "PLIS18", "PLIS17", "PLIS18", "PLIS18", "PLIS17", "PLIS18",
"PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0",
"PLIS18", "PLIS0", "PLIS0", "PLIS0", "PLIS17", "PLIS18", "PLIS0",
"PLIS0", "PLIS17", "PLIS0", "PLIS0", "PLIS0", "PLIS18", "PLIS0",
"PLIS17", "PLIS0", "PLIS18", "PLIS0", "PLIS18", "PLIS18", "PLIS0",
"PLIS18", "PLIS0", "PLIS0", "PLIS18", "PLIS18", "PLIS0", "PLIS0",
"PLIS0", "PLIS0", "PLIS0", "PLIS17", "PLIS0", "PLIS0", "PLIS17",
"PLIS0", "PLIS0", "PLIS17", "PLIS0", "PLIS0", "PLIS0", "PLIS18",
"PLIS17", "PLIS18", "PLIS18", "PLIS0", "PLIS18", "PLIS18", "PLIS0",
"PLIS0", "TULIPT003", "PLIS17", "PLIS0", "PLIS17", "PLIS0", "PLIS0",
"PLIS0", "PLIS0", "PLIS17", "PLIS0", "PLIS0", "PLIS0", "PLIS0",
"PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0",
"PLIS18", "PLIS17", "PLIS0", "PLIS17", "PLIS18", "PLIS0", "PLIS17",
"PLIS0", "PLIS0", "PLIS0", "PLIS17", "PLIS17", "PLIS0", "PLIS18",
"PLIS17", "PLIS17", "PLIS0", "PLIS17", "PLIS0", "PLIS17", "PLIS18",
"TULIP003", "PLIS17", "PLIS18", "PLIS18", "PLIS0", "PLIS18",
"PLIS0", "PLIS0", "PLIS17", "PLIS17", "PLIS0", "PLIS19", "PLIS0",
"PLIS0", "PLIS17", "PLIS18", "PLIS18", "PLIS18", "PLIS17", "PLIS0",
"PLIS0", "PLIS17", "PLIS17", "TULIP003", "PLIS19", "PLIS0", "TULIP003",
"PLIS0", "PLIS17", "PLIS17", "PLIS19", "PLIS17", "PLIS0", "PLIS0",
"PLIS17", "PLIS17", "PLIS18", "PLIS17", "PLIS18", "PLIS17", "PLIS19",
"PLIS17", "PLIS0", "PLIS0", "PLIS0", "PLIS18", "PLIS18", "PLIS18",
"PLIS17", "PLIS0", "PLIS17", "PLIS18", "PLIS18", "PLIS17", "PLIS19",
"PLIS19", "PLIS17", "PLIS17", "PLIS17", "PLIS0", "PLIS17", "PLIS0",
"PLIS17", "PLIS18", "PLIS18", "PLIS0", "PLIS18", "PLIS18", "PLIS18",
"PLIS17", "PLIS18", "PLIS18", "PLIS18", "PLIS19", "PLIS18", "PLIS18",
"PLIS17", "PLIS0", "PLIS17", "PLIS18", "PLIS0", "PLIS18", "PLIS17",
"PLIS0", "PLIS0", "PLIS17", "PLIS18", "PLIS19", "PLIS17", "PLIS0",
"PLIS0", "PLIS17", "PLIS18", "PLIS18", "PLIS18", "PLIS0", "PLIS17",
"PLIS19", "PLIS18", "PLIS17", "PLIS17", "PLIS19", "PLIS0", "PLIS17",
"PLIS18", "PLIS19", "PLIS17", "PLIS17", "PLIS19", "PLIS18", "PLIS0",
"PLIS17", "PLIS17", "PLIS18", "PLIS0", "PLIS17", "PLIS17", "PLIS17",
"PLIS0", "PLIS17", "PLIS0", "PLIS18", "PLIS0", "PLIS0", "PLIS17",
"PLIS0", "PLIS0", "PLIS0", "PLIS18", "PLIS18", "PLIS0", "PLIS18",
"PLIS17", "PLIS0", "PLIS17", "PLIS17", "PLIS0", "PLIS0", "PLIS0",
"PLIS0", "PLIS19", "PLIS0", "PLIS18", "PLIS18", "PLIS0", "PLIS0",
"PLIS0", "PLIS0", "PLIS0", "PLIS19", "PLIS0", "PLIS0", "PLIS17",
"PLIS18", "PLIS17", "PLIS0", "PLIS0", "PLIS17", "PLIS17", "PLIS17",
"PLIS18", "PLIS0", "PLIS0", "PLIS17", "PLIS18", "PLIS18", "PLIS17",
"PLIS19", "PLIS19", "PLIS17", "PLIS18", "PLIS17", "PLIS19", "PLIS17",
"PLIS18", "PLIS18", "PLIS17", "PLIS18", "PLIS18", "PLIS17", "PLIS17",
"PLIS0", "PLIS17", "PLIS17", "PLIS18", "PLIS0", "PLIS0", "PLIS17",
"PLIS0", "PLIS0", "PLIS0", "PLIS18", "PLIS17", "PLIS0", "PLIS0",
"PLIS0", "PLIS0", "PLIS0", "PLIS18", "PLIS17", "PLIS0", "PLIS0",
"PLIS0", "PLIS0", "PLIS18", "PLIS0", "PLIS0", "PLIS0", "PLIS0",
"PLIS0", "PLIS0", "PLIS17", "PLIS0", "PLIS0", "PLIS0", "PLIS17",
"PLIS0", "PLIS0", "PLIS0", "PLIS19", "PLIS0", "PLIS0", "PLIS0",
"PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS18", "PLIS0",
"PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS18", "PLIS0",
"PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0",
"PLIS0", "PLIS19", "PLIS0", "PLIS17", "PLIS0", "PLIS17", "PLIS0",
"PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0",
"PLIS0", "PLIS17", "PLIS0", "PLIS0", "PLIS0", "PLIS0", "PLIS0",
"PLIS0", "PLIS0", "PLIS17", "PLIS0", "PLIS0", "PLIS17", "PLIS0",
"PLIS18", "PLIS17", "PLIS17", "PLIS0", "PLIS0", "PLIS17", "PLIS0",
"PLIS18", "PLIS17", "PLIS18", "PLIS0", "PLIS17", "PLIS17", "PLIS0",
"PLIS17", "PLIS0", "PLIS17", "PLIS19", "PLIS19", "PLIS0", "PLIS19",
"PLIS19", "PLIS0", "PLIS18", "PLIS18", "PLIS17", "PLIS18", "PLIS17",
"PLIS19", "PLIS19", "PLIS18", "PLIS18", "PLIS17", "PLIS18", "PLIS0",
"PLIS19", "PLIS0", "PLIS19", "PLIS19", "PLIS17", "PLIS19", "TULIP003",
"PLIS17", "PLIS18", "PLIS18", "PLIS0", "PLIS19", "PLIS19", "PLIS18",
"PLIS18", "PLIS0", "PLIS19", "PLIS0", "PLIS0", "PLIS17", "PLIS19",
"PLIS19", "PLIS17", "PLIS18", "PLIS17", "PLIS19", "PLIS17", "PLIS17",
"PLIS17", "PLIS19", "PLIS17", "PLIS17", "PLIS19", "PLIS18", "PLIS18",
"PLIS18", "PLIS17", "PLIS18", "PLIS19", "PLIS18", "PLIS18", "PLIS19",
"PLIS18", "PLIS17", "PLIS17", "PLIS18", "PLIS18", "PLIS17", "PLIS18",
"PLIS19", "PLIS17", "PLIS17", "PLIS17", "PLIS19", "PLIS19", "PLIS19",
"PLIS18", "PLIS19", "PLIS18", "PLIS18", "PLIS19", "PLIS18", "PLIS17",
"PLIS19", "PLIS18", "PLIS18", "PLIS17", "PLIS17", "PLIS17", "PLIS19",
"PLIS19", "PLIS18", "PLIS19", "PLIS18", "PLIS17", "PLIS18", "PLIS18",
"PLIS18", "PLIS19", "PLIS18", "PLIS19", "PLIS19", "PLIS17", "PLIS17",
"PLIS18", "PLIS19", "PLIS18", "PLIS17", "PLISlight0", "PLIS17",
"PLIS17", "PLISlight0", "PLIS19", "PLIS18", "PLIS19", "PLIS19",
"PLIS19", "PLISlight0", "PLIS19", "PLISlight0", "PLISlight0",
"PLIS18", "PLIS19", "PLIS19", "PLISlight0", "PLIS19", "PLISlight0",
"PLISlight0", "PLIS19", "PLIS18", "PLIS18", "PLIS17", "PLISlight0",
"PLIS19", "PLIS18", "PLISlight0", "PLIS18", "PLIS18", "PLIS19",
"PLIS19", "PLIS19", "PLIS19", "PLIS18", "PLIS17", "PLIS18", "PLIS18",
"PLIS17", "PLIS19", "PLIS18", "PLIS17", "PLIS18", "PLIS17", "PLIS17",
"PLIS19", "PLIS19", "PLISlight0", "PLIS17", "PLIS18", "PLIS19",
"PLIS18", "PLIS17", "PLIS19", "PLIS17", "PLIS17", "PLISlight0",
"PLIS18", "PLIS17", "TULIP004", "PLISlight0", "PLIS19", "PLISlight0",
"PLIS19", "PLISlight0", "PLISlight0", "PLIS17", "PLISlight0",
"PLIS18", "PLIS19", "PLIS19", "PLIS18", "PLISlight0", "PLISlight0",
"PLIS18", "PLIS17", "PLIS18", "PLIS17", "PLIS17", "PLIS17", "PLIS17",
"PLIS17", "PLISlight0", "PLIS18", "PLIS17", "PLIS17", "PLIS18",
"PLIS17", "PLIS18", "PLIS17", "PLIS18", "PLIS17", "PLIS19", "PLIS17",
"PLIS17", "PLIS19", "PLIS17", "PLIS17", "PLIS18", "PLIS17", "PLIS17",
"PLIS18", "PLIS18", "PLIS17", "PLIS17", "PLIS17", "PLIS17", "PLIS18",
"PLIS18", "PLIS18", "PLIS17", "PLIS19", "PLIS17", "PLIS17", "PLIS17",
"PLIS17", "PLIS17", "PLIS18", "PLIS17", "PLIS17", "PLIS17", "PLIS17",
"PLISlight10", "PLIS18", "PLIS17", "PLIS18", "PLIS17", "PLIS18",
"PLISlight0", "PLIS17", "PLIS17", "PLIS17", "PLISlight0", "PLISlight10",
"PLIS19", "PLISlight10", "PLIS18", "PLIS17", "PLIS19", "PLIS17",
"PLIS17", "PLIS19", "PLIS18", "PLIS18", "PLIS19", "PLIS19", "PLIS17",
"PLIS18", "PLISlight10", "PLIS19", "PLIS18", "PLIS18", "PLIS19",
"PLIS19", "PLIS17", "PLISlight10", "PLIS17", "PLIS17", "PLIS19",
"PLIS18", "PLIS18", "PLISlight0", "PLIS19", "PLIS18", "PLIS18",
"PLISlight10", "PLIS19", "PLIS19", "PLISlight10", "PLIS18", "PLIS18",
"PLIS19", "PLIS19", "PLIS18", "PLIS19", "PLIS18", "PLIS19", "PLISlight0",
"PLIS18", "PLISlight10", "PLISlight10", "PLIS19", "PLISlight0",
"PLISlight0", "PLIS18", "PLIS18", "PLISlight10", "PLISlight10",
"PLIS18", "PLISlight0", "PLISlight0", "PLIS17", "PLIS19", "PLIS19",
"PLIS18", "PLIS19", "PLIS19", "PLIS19", "PLIS19", "PLIS19", "PLIS18",
"PLIS19", "PLISlight0", "PLIS18", "PLIS18", "PLIS19", "PLIS19",
"PLIS19", "PLIS19", "PLIS19", "PLISlight10", "PLIS18", "PLIS19",
"PLISlight0", "PLIS19", "PLIS19", "PLISlight0", "PLIS18", "PLIS19",
"PLIS19", "PLIS19", "PLIS19", "PLIS18", "PLISlight0", "PLIS19",
"PLISlight0", "PLIS19", "PLISlight0", "PLIS18", "PLISlight10",
"PLIS18", "PLISlight0", "PLIS18", "PLISlight0", "PLIS18", "PLIS19",
"PLIS19", "PLIS18", "PLIS18", "PLISlight10", "PLIS19", "PLIS18",
"PLIS19", "PLIS18", "PLIS19", "PLIS19", "PLIS18", "PLIS18", "PLIS18",
"PLIS18", "PLIS19", "PLIS19", "PLIS19", "PLIS19", "PLIS19", "PLIS18",
"PLIS18", "PLIS19", "PLIS18", "PLIS19", "PLIS18", "PLIS19", "PLIS18",
"PLISlight10", "PLIS19", "PLIS18", "PLISlight18", "PLIS19", "PLIS18",
"PLIS18", "PLIS19", "PLIS18", "PLIS19", "PLISlight18", "PLIS19",
"PLISlight18", "PLISlight10", "PLIS18", "PLIS19", "PLIS19", "PLISlight10",
"PLIS19", "PLIS19", "PLIS18", "PLIS19", "PLIS19", "PLIS19", "PLISlight0",
"PLIS18", "PLIS19", "PLIS19", "PLIS20", "PLIS20", "PLIS20", "PLIS20",
"PLIS19", "PLIS20", "PLIS20", "PLIS19", "PLIS20", "PLIS18", "PLIS20",
"PLIS19", "PLIS20", "PLISlight18", "PLIS20", "PLIS19", "PLISlight18",
"PLIS19", "PLIS20", "PLIS20", "PLIS19", "PLIS19", "PLIS19", "PLIS19",
"PLISlight18", "PLIS20", "PLIS19", "PLIS20", "PLIS20", "PLIS19",
"PLIS19", "PLIS20", "PLIS19", "PLIS19", "PLIS20", "PLIS19", "PLISlight10",
"PLIS20", "PLISlight18", "PLIS19", "PLISlight18", "PLIS19", "PLIS20",
"PLIS19", "PLIS19", "PLIS19", "PLIS19", "PLIS20", "PLIS19", "PLIS20",
"PLIS20", "PLIS19", "PLIS20", "PLIS20", "PLIS20", "PLIS20", "PLIS19",
"PLIS20", "PLIS19", "PLIS19", "PLIS20", "PLIS19", "PLIS19", "PLIS19",
"PLIS20", "PLISlight18", "PLIS20", "PLIS19", "PLIS19", "PLIS20",
"PLIS20", "PLIS20", "PLIS19", "PLIS19", "PLIS20", "PLISlight19",
"PLIS20", "PLIS20", "PLIS20", "PLIS20", "PLIS20", "PLIS19", "PLIS20",
"PLIS20", "PLIS20", "PLIS20", "PLIS20", "PLIS20", "PLISlight18",
"PLIS20", "PLIS19", "PLIS20", "PLISlight19", "PLISlight18", "PLIS20",
"PLISlight18", "PLIS20", "PLIS20", "PLIS20", "PLIS20", "PLISlight19",
"PLISlight19", "PLIS20", "PLISlight19", "PLIS20", "PLIS20", "PLIS20",
"PLIS20", "PLIS20", "PLIS20", "PLIS20", "PLIS20", "PLIS20", "PLIS20",
"PLIS20", "PLIS20", "PLIS20", "PLIS20", "PLISlight19", "PLIS20",
"PLIS20", "PLIS20", "PLISlight19", "PLIS20", "PLIS20", "PLIS20",
"PLIS20", "PLIS20", "PLIS20", "PLIS20", "PLIS20", "PLIS20", "PLIS20",
"PLIS20", "PLISlight19", "PLIS20", "PLIS20", "PLIS20", "PLIS20",
"PLIS20", "PLIS20", "PLIS20", "PLIS20", "PLIS20", "PLIS20", "PLIS20",
"PLISlight19", "PLISlight19", "PLIS20", "PLIS20", "PLIS20", "PLIS20",
"PLIS20", "PLIS20", "PLIS20", "PLIS20", "PLIS20", "PLIS20", "PLIS20",
"PLIS20", "PLIS20", "PLIS20", "PLIS20", "PLIS20", "PLIS20", "PLIS20",
"PLIS20", "PLIS20", "PLIS20", "PLIS20", "PLIS20", "PLIS20", "PLIS20",
"PLIS20", "PLIS20", "PLIS20", "PLIS21", "PLIS20", "PLIS20", "PLIS21",
"PLIS21", "PLIS20", "PLIS21", "PLIS20", "PLIS20", "PLIS21", "PLIS21",
"PLIS21", "PLIS21", "PLIS21", "PLIS21", "PLIS20", "PLIS20", "PLIS21",
"PLIS20", "PLIS21", "PLIS21", "PLIS20", "PLIS20", "PLIS20", "PLIS21",
"PLIS20", "PLIS21", "PLIS21", "PLIS20", "PLIS21", "PLIS20", "PLIS20",
"PLIS21", "PLIS21", "PLIS20", "PLIS20", "PLIS21", "PLIS20", "PLIS20",
"PLIS20", "PLIS20", "PLIS20", "PLIS21", "PLIS20", "PLIS21", "PLIS21",
"PLIS20", "PLIS21", "PLIS20", "PLIS21", "PLIS20", "PLIS21", "PLIS20",
"PLIS20", "PLIS21", "PLIS21", "PLIS21", "PLIS20", "PLIS20", "PLIS21",
"PLIS21", "PLIS21", "PLIS21", "PLIS21", "PLIS21")), row.names = c(NA,
-2736L), class = c("tbl_df", "tbl", "data.frame"))
df$study_grob <- NA
df$study_grob[grepl("PLIS\\d+", df$study)] <- "PLIS"
df$study_grob[grepl("PLISlight", df$study)] <- "PLISlight"
df$study_grob[grepl("TULIP", df$study)] <- "TULIP"
library(dplyr)
df <- df %>% arrange(ID, study_grob)
df$ID_2 <- df$ID
# Iterate through the data frame
for (i in 2:nrow(df)) {
if (df$ID[i] == df$ID[i - 1]) {
# Check if the current Study is different from the previous one
if (!startsWith(df$study_grob[i], df$study_grob[i - 1])) {
# Generate a new ID for the entire group if it's a different Study group
new_id <- paste0(df$ID[i], '_new')
df$ID_2[df$ID == df$ID[i]] <- new_id
}
}
}
View(df)
for (i in 2:nrow(df)) {
if (df$ID[i] == df$ID[i - 1]) {
# Check if the current Study is different from the previous one
if (!startsWith(df$study_grob[i], df$study_grob[i - 1])) {
# Generate a new ID if it's a different Study group
new_id <- paste0(df$ID[i], '_new')
}
# Apply the new ID within the same group
df$ID_2[df$ID == df$ID[i]] <- new_id
}
}
View(df)
library(dplyr)
df <- df %>% arrange(ID, study_grob)
df$ID_2 <- df$ID
for (i in 2:nrow(df)) {
if (df$ID[i] == df$ID[i - 1]) {
# Check if the current Study is different from the previous one
if (!startsWith(df$study_grob[i], df$study_grob[i - 1])) {
# Generate a new ID if it's a different Study group
new_id <- paste0(df$ID[i], '_new')
}
# Apply the new ID within the same group
df$ID_2[df$ID == df$ID[i]] <- new_id
}
}
View(subset_df)
View(df)
for (i in 2:nrow(df)) {
if (df$ID[i] == df$ID[i - 1]) {
# Check if the current Study is different from the previous one
if (!startsWith(df$study_grob[i], df$study_grob[i - 1])) {
# Generate a new ID if it's a different Study group
new_id <- paste0(df$ID[i], '_new')
}
# Apply the new ID within the same group
df$ID_2[df$ID == df$ID[i] & df$study_grob == df$study_grob[i]] <- new_id
}
}
library(dplyr)
df <- df %>% arrange(ID, study_grob)
df$ID_2 <- df$ID
for (i in 2:nrow(df)) {
if (df$ID[i] == df$ID[i - 1]) {
# Check if the current Study is different from the previous one
if (!startsWith(df$study_grob[i], df$study_grob[i - 1])) {
# Generate a new ID if it's a different Study group
new_id <- paste0(df$ID[i], '_new')
}
# Apply the new ID within the same group
df$ID_2[df$ID == df$ID[i] & df$study_grob == df$study_grob[i]] <- new_id
}
}
View(df)
df <- df %>% arrange(ID, study_grob)
df$ID_2 <- df$ID
for (i in 2:nrow(df)) {
if (df$ID[i] == df$ID[i - 1]) {
# Check if the current Study is different from the previous one
if (!startsWith(df$study_grob[i], df$study_grob[i - 1])) {
# Generate a new ID if it's a different Study group
new_id <- paste0(df$ID[i], '_new')
df$ID_2[df$ID == df$ID[i] & df$study_grob == df$study_grob[i]] <- new_id
}
# Apply the new ID within the same group
}
}
View(df)
shiny::runApp('Projects/prediabetes_clusters_shiny')
library(shiny)
library(shinyalert)
library(bslib)
library(gridlayout)
library(shinyWidgets)
library(jsonlite)
library(ggplot2)
library(readr)
library(tools)
library(class)
library(readxl)
library(viridis)
library(webr)
library(dplyr)
library(tidyr)
library(vroom)
text <- fromJSON("supplementary/combined.json")
library(shiny)
library(shinyalert)
library(bslib)
library(gridlayout)
library(shinyWidgets)
library(jsonlite)
library(ggplot2)
library(readr)
library(tools)
library(class)
library(readxl)
library(viridis)
library(webr)
library(dplyr)
library(tidyr)
library(vroom)
text <- fromJSON("supplementary/combined.json")
dictionary <- fromJSON("supplementary/dictionary.json")
q()
library(shiny)
library(shinyalert)
library(bslib)
library(gridlayout)
library(shinyWidgets)
library(jsonlite)
library(ggplot2)
library(readr)
library(tools)
library(class)
library(readxl)
library(viridis)
library(webr)
library(dplyr)
library(tidyr)
library(vroom)
text <- fromJSON("supplementary/combined.json")
runApp('Projects/prediabetes_clusters_shiny')
runApp('Projects/prediabetes_clusters_shiny')
library(shiny)
library(shinyalert)
library(bslib)
library(gridlayout)
library(shinyWidgets)
library(jsonlite)
library(ggplot2)
library(readr)
library(tools)
library(class)
library(readxl)
library(viridis)
library(webr)
library(dplyr)
library(tidyr)
library(vroom)
text <- fromJSON("supplementary/combined.json")
q()
shiny::runApp('Projects/prediabetes_clusters_shiny')
runApp('Projects/prediabetes_clusters_shiny')
runApp('Projects/prediabetes_clusters_shiny')
runApp('Projects/prediabetes_clusters_shiny')
runApp('Projects/prediabetes_clusters_shiny')
runApp('Projects/prediabetes_clusters_shiny')
runApp('Projects/prediabetes_clusters_shiny')
runApp('Projects/prediabetes_clusters_shiny')
library(jtools)
theme_nice()
theme_nice
runApp('Projects/prediabetes_clusters_shiny')
runApp('Projects/prediabetes_clusters_shiny')
runApp('Projects/prediabetes_clusters_shiny')
runApp('Projects/prediabetes_clusters_shiny')
runApp('Projects/prediabetes_clusters_shiny')
runApp('Projects/prediabetes_clusters_shiny')
?prettyRadioButtons
runApp('Projects/prediabetes_clusters_shiny')
runApp('Projects/prediabetes_clusters_shiny')
runApp('Projects/prediabetes_clusters_shiny')
runApp('Projects/prediabetes_clusters_shiny')
shiny::runApp('Projects/prediabetes_clusters_shiny')
runApp('Projects/prediabetes_clusters_shiny')
runApp('Projects/prediabetes_clusters_shiny')
runApp('Projects/prediabetes_clusters_shiny')
runApp('Projects/prediabetes_clusters_shiny')
runApp('Projects/prediabetes_clusters_shiny')
runApp('Projects/prediabetes_clusters_shiny')
runApp('Projects/prediabetes_clusters_shiny')
install.packages("jsonlite")
install.packages("languageserver")
install.packages("tidyverse")
install.packages('xfun')
install.packages('xfun', repos = 'https://yihui.r-universe.dev')
install.packages("duckplyr")
install.packages("OlinkAnalyze")
install.packages("Seurat")
install.packages("dqrng")
install.packages('dqrng', repos = c(
rstub = 'https://rstub.r-universe.dev',
CRAN = 'https://cloud.r-project.org'))
library(Seurat)
install.packages("fastmap")
library(Seurat)
library(httpgd)
install.packages("httpgd")
library(shiny); runApp('C:/Users/idm/OneDrive - Helmholtz Zentrum München/Projects/30_international_cluster_app/test_translations.r')
